version: '3.8'

services:
  product-insight-agent:
    build: .
    container_name: product-insight-agent
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/ouroboros
      - DATABASE_SCHEMA=product_insights
      - REDDIT_CLIENT_ID=${REDDIT_CLIENT_ID}
      - REDDIT_CLIENT_SECRET=${REDDIT_CLIENT_SECRET}
      - REDDIT_SUBREDDIT=${REDDIT_SUBREDDIT:-OurAppCommunity}
      - LLM_PROVIDER=${LLM_PROVIDER:-anthropic}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - SCHEDULE_ENABLED=${SCHEDULE_ENABLED:-true}
    depends_on:
      - postgres
    volumes:
      - ./data:/app/data
      - ./reports:/app/reports
      - ./logs:/app/logs
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: product-insight-postgres
    environment:
      - POSTGRES_DB=ouroboros
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: product-insight-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "8080:80"
    depends_on:
      - postgres
    profiles: ["admin"]

volumes:
  postgres_data: