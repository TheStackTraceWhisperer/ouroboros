name: Build and Publish to GHCR

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test-spring-boot:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Run Spring Boot tests
      run: mvn -B clean test

    - name: Build Spring Boot application
      run: mvn -B clean package -DskipTests

    - name: Upload Spring Boot build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: jar-artifacts
        path: target/*.jar

  test-product-insight-agent:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('product-insight-agent/requirements.txt') }}
        restore-keys: ${{ runner.os }}-pip-

    - name: Install Python dependencies
      working-directory: product-insight-agent
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Python syntax validation
      working-directory: product-insight-agent
      run: |
        python -m py_compile src/**/*.py
        python -m py_compile tests/*.py

    - name: Run Python tests
      working-directory: product-insight-agent
      run: python -m pytest tests/ -v --tb=short

    - name: Run Python linting
      working-directory: product-insight-agent
      run: |
        flake8 src/ tests/ --max-line-length=120 --ignore=E203,W503
        black --check src/ tests/

  build-and-publish-image:
    needs: [test-spring-boot, test-product-insight-agent]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha,prefix=
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

    - name: Generate image summary
      if: github.event_name != 'pull_request'
      run: |
        echo "## Build Summary 🎉" >> $GITHUB_STEP_SUMMARY
        echo "### Spring Boot Application ☕" >> $GITHUB_STEP_SUMMARY
        echo "- Java 21 with Spring Boot 3.5.x" >> $GITHUB_STEP_SUMMARY
        echo "- Maven build system" >> $GITHUB_STEP_SUMMARY
        echo "- REST API endpoints tested" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Product Insight Agent 🐍" >> $GITHUB_STEP_SUMMARY
        echo "- Python 3.12 with comprehensive test suite" >> $GITHUB_STEP_SUMMARY
        echo "- Data processing and LLM analysis tested" >> $GITHUB_STEP_SUMMARY
        echo "- Integration tests validated" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Docker Image Published 🐳" >> $GITHUB_STEP_SUMMARY
        echo "**Registry**: ${{ env.REGISTRY }}" >> $GITHUB_STEP_SUMMARY
        echo "**Image**: ${{ env.IMAGE_NAME }}" >> $GITHUB_STEP_SUMMARY
        echo "**Tags**:" >> $GITHUB_STEP_SUMMARY
        echo '${{ steps.meta.outputs.tags }}' | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY
